/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_nemoprogram_free(a: number, b: number): void;
export function __wbg_nemoerror_free(a: number, b: number): void;
export function nemoerror_toString(a: number): Array;
export function __wbg_nemoresource_free(a: number, b: number): void;
export function nemoresource_accept(a: number): Array;
export function nemoresource_url(a: number): Array;
export function nemoprogram_new(a: number, b: number): Array;
export function nemoprogram_getResourcesUsedInImports(a: number): Array;
export function nemoprogram_markDefaultOutputs(a: number): void;
export function nemoprogram_getOutputPredicates(a: number): number;
export function nemoprogram_getEDBPredicates(a: number): number;
export function __wbg_nemoengine_free(a: number, b: number): void;
export function nemoengine_new(a: number, b: number): Array;
export function nemoengine_reason(a: number): Array;
export function nemoengine_countFactsOfDerivedPredicates(a: number): number;
export function nemoengine_countFactsOfPredicate(a: number, b: number, c: number): Array;
export function nemoengine_getResult(a: number, b: number, c: number): Array;
export function nemoengine_savePredicate(a: number, b: number, c: number, d: number): Array;
export function nemoengine_traceFactAtIndexAscii(a: number, b: number, c: number, d: number): Array;
export function nemoengine_traceFactAtIndexGraphMlTree(a: number, b: number, c: number, d: number): Array;
export function nemoengine_traceFactAtIndexGraphMlDag(a: number, b: number, c: number, d: number): Array;
export function nemoengine_parseAndTraceFactAscii(a: number, b: number, c: number): Array;
export function nemoengine_parseAndTraceFactGraphMlTree(a: number, b: number, c: number): Array;
export function nemoengine_parseAndTraceFactGraphMlDag(a: number, b: number, c: number): Array;
export function __wbg_nemoresults_free(a: number, b: number): void;
export function __wbg_nemoresultsiteratornext_free(a: number, b: number): void;
export function __wbg_get_nemoresultsiteratornext_done(a: number): number;
export function __wbg_set_nemoresultsiteratornext_done(a: number, b: number): void;
export function __wbg_get_nemoresultsiteratornext_value(a: number): number;
export function __wbg_set_nemoresultsiteratornext_value(a: number, b: number): void;
export function nemoresults_next(a: number): number;
export function getNemoVersion(): Array;
export function setAllocErrorHook(): void;
export function setPanicHook(): void;
export function createNemoLanguageServer(): number;
export function __wbg_nemolsprequestsserverinitiated_free(a: number, b: number): void;
export function __wbg_nemolspresponsesserverinitiated_free(a: number, b: number): void;
export function nemolsprequestsserverinitiated_getNextRequest(a: number): number;
export function nemolspresponsesserverinitiated_sendResponse(a: number, b: number): number;
export function __wbg_nemolspchannelclientinitiated_free(a: number, b: number): void;
export function nemolspchannelclientinitiated_sendRequest(a: number, b: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_export_3: WebAssembly.Table;
export function closure3327_externref_shim(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __externref_table_dealloc(a: number): void;
export function __externref_drop_slice(a: number, b: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __externref_table_alloc(): number;
export function closure3382_externref_shim(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
